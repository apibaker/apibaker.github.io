!function t(e,n,a){function o(i,l){if(!n[i]){if(!e[i]){var d="function"==typeof require&&require;if(!l&&d)return d(i,!0);if(r)return r(i,!0);throw new Error("Cannot find module '"+i+"'")}var s=n[i]={exports:{}};e[i][0].call(s.exports,function(t){var n=e[i][1][t];return o(n||t)},s,s.exports,t,e,n,a)}return n[i].exports}for(var r="function"==typeof require&&require,i=0;i<a.length;i++)o(a[i]);return o}({1:[function(require,module,exports){"use strict";var _extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t},_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},sample_code='\n{\n    name: "simple_app",\n    version: "1.0.0",\n    description: "a simple sample app of api baker",\n    domain: [\n      {\n        name: "main",\n        description: "main domain",\n        entity: [\n          {\n            name: "Ent",\n            description: "ent",\n            prop: [\n              { name: "Prop1", description: "Prop1", type: "string" }\n            ],\n            action: [\n              {\n                name: "CreateEnt",\n                description: "create ent",\n                type: "Create",\n                field: ["Prop1"],\n                path: "/ent",\n                method: "PUT"\n              },\n              {\n                name: "ReadEnt",\n                description: "read ent",\n                type: "Read",\n                field: ["Prop1"],\n                path: "/ent/:id",\n                method: "GET"\n              },\n              \n            ]\n          }\n        ],\n      }\n    ],\n    test:[\n      {\n        action:"main_CreateEnt",\n        in:{obj:{Prop1:\'str1\'}},\n        out:{ main_EntId: 1  }\n      },\n      {\n        action:"main_ReadEnt",\n        in:{id:1},\n        out:{ count: 1, data: [ { Prop1: \'str1\' } ] }\n      },\n      \n    ]\n  }\n  ',dbAdapter={},container=window;function CP_UTIL_Map2json(t,e){e=e||{};for(var n=Object.keys(t),a=0;a<n.length;a++){for(var o=n[a],r=o.split(","),i=e,l=0;l<r.length-1;l++){var d=i[r[l]];null==d&&(d=new Object,i[r[l]]=d),i=d}var s=t[o];if(Array.isArray(s)){for(var p=new Array,c=0;c<s.length;c++){var u=new Object;CP_UTIL_Map2json(s[c],u),p.push(u)}i[r[r.length-1]]=p}else if("object"===(void 0===s?"undefined":_typeof(s))){CP_UTIL_Map2json(s,u=new Object),i[r[r.length-1]]=u}else i[r[r.length-1]]=s}return e}dbAdapter.name="sql",dbAdapter.connect=function(t){return container.CP_SQLJS_Schema=container.CP_SQLJS_Schema||{},container.CP_SQLJS_Schema[t]=container.CP_SQLJS_Schema[t]||new SQL.Database,container.CP_SQLJS_Schema[t]},dbAdapter.disconnect=function(t){return container.CP_SQLJS_Schema[t]=void 0},dbAdapter.runSql=function(t,e,n,a){try{for(var o=0;o<e.length;o++)debuglog(e[o]),t.run(e[o]);n(!0)}catch(t){a(t)}},dbAdapter.execSql=function(t,e,n,a,o){var r=e;0==r.length&&a();for(var i=0;i<r.length;i++){var l=null;try{debuglog(r[i].sql);var d=r[i].params?r[i].params():[];debuglog(JSON.stringify(d)),l=t.prepare(r[i].sql,d);for(var s=[],p=[];l.step();){var c=l.getAsObject();p=l.getColumnNames(),s.push(c)}var u={rows:{item:function(t){return s[t]},length:s.length},columns:function(){return p||[]},insertIdFunc:function(){var e=t.prepare("SELECT last_insert_rowid()",[]);if(e.step())return e.getAsObject()["last_insert_rowid()"]}};if(r[i].result)try{r[i].result(t,u)}catch(t){return errlog(t),void o(t)}if(i==r.length-1){if(a){var m={};a(m=CP_UTIL_Map2json(n,m),u,t)}return void l.free()}}catch(t){errlog(t),null!=l&&l.free(),o(t);break}}};var LOG_DEBUG=!1;function debuglog(t){LOG_DEBUG&&console.log(t)}function infolog(t){console.log(t)}function errlog(t){console.error(t)}var store=new Vuex.Store({state:{code:null},mutations:{setCode:function(t,e){t.code=e},setCurrentFile:function(t,e){t.files.push(e)},setRootFile:function(t,e){t.files=[e]},gotoFile:function(t,e){for(var n=[],a=0;a<t.files.length&&(n.push(t.files[a]),t.files[a]!=payload);a++);t.files=n},addError:function(t,e){t.errors.push(e)},clearError:function(t,e){t.errors.length=0},newError:function(t,e){t.errors.length=0,t.errors.push(e)}}});Vue.component("code-list",{store:store,data:function(){return{databsetype:"pgSQL"}},computed:_extends({},Vuex.mapState(["code"]),{model:function model(){var model=eval("("+this.code+")");return model},modelName:function(){return this.model.name},runtimeCode:function runtimeCode(){var model=eval("("+this.code+")");if(!model)return{};try{var appModel=genAppJSON(model,this.databsetype);return genNodeCode(appModel,model,this.databsetype)}catch(t){return console.log(t),{}}}}),template:'\n\t\t<div  style="padding:15px">\n\t      <div class="row" style="margin-top:10px;margin-bottom:10px">\n            <div class="col-md-6">\n                <div class="input-group input-group-sm">\n                <select class="form-control" v-model="databsetype">\n                <option value="pgSQL">PostgreSQL</option>\n                <option value="mysql">MySQL</option>\n                </select>\n                </div>\n            </div>\n            <div class="col-md-6">\n            <div class="input-group input-group-sm pull-right ">\n              <button type="button" class="btn btn-success pull-right btn-sm" role="button" v-on:click="zipCode()">Download ZIP</button>\n              </div>\n\t        </div>\n          </div>\n          \n          <ul class="list-group">\n          <li v-for="(item, idx) in runtimeCode" class="list-group-item list-group-item-default"  >\n\n                <a data-toggle="collapse" data-parent="#runtimecode-accordion" :href="\'#runtimeCode\'+idx" aria-expanded="false" :aria-controls="\'runtimeCodehHeading\'+idx">\n                    {{item.path}}\n                </a>\n  \n                <div :id="\'runtimeCode\'+idx" class="panel-collapse collapse" role="tabpanel" :aria-labelledby="\'runtimeCodehHeading\'+idx">\n                <div class="panel-body">\n      <pre  >{{item.code}}</pre>\n                </div>\n              </div>\n  \n          </li>\n          </ul>\n\n\n\t  </div>\n\t',updated:function(){prettyPrint()},methods:{zipCode:function(){for(var t=this,e=new JSZip,n=e.folder("action"),a=this.runtimeCode,o=0;o<a.length;o++)-1==a[o].path.indexOf("action/")?e.file(a[o].path,a[o].code):n.file(a[o].path.replace("action/",""),a[o].code);e.generateAsync({type:"blob"}).then(function(e){saveAs(e,t.modelName+".zip")})}}}),Vue.component("api-doc",{store:store,computed:_extends({},Vuex.mapState(["code"]),{appModel:function appModel(){var model=eval("("+this.code+")");if(!model)return{};try{var appModel=genAppJSON(model);return appModel}catch(t){return console.log(t),{}}}}),data:function(){return{dbinited:{}}},updated:function(){},methods:{showTry:function(t){$("#act-try"+t+" .try-editor").each(function(t,e){var n=$(e).prop("id"),a=ace.edit($(e).prop("id"));a.session.setMode("ace/mode/json"),a.$blockScrolling=1/0;var o=$("#"+n+"_pre").text().trim();"N/A"!==o&&a.setValue(o,-1),window[n]=a})},hasQueryParam:function(t,e){for(var n=0;n<t.length;n++)for(var a=0;a<t[n].inParam.length;a++){var o=t[n].inParam[a];if(!("Create"==e.Type&&n>0&&1===o[0]&&"Id"===o[1]&&o[2]===e.Entity+"Id"))return!0}return!1},hasQueryParamBody:function(t,e){for(var n=0;n<t.length;n++)for(var a=0;a<t[n].inParam.length;a++){var o=t[n].inParam[a];if(!("Create"==e.Type&&n>0&&1===o[0]&&"Id"===o[1]&&o[2]===e.Entity+"Id")&&("Id"!==o[1]||1!==o[0]||"Read"!==e.Raw.type&&"Delete"!==e.Raw.type))return!0}return!1},param2json:function(t,e){for(var n=[],a={},o=0;o<t.length;o++)for(var r=0;r<t[o].inParam.length;r++){var i=t[o].inParam[r];if(!("Create"==e.Type&&o>0&&1===i[0]&&"Id"===i[1]&&i[2]===e.Entity+"Id")&&!a[i[2]]){a[i[2]]=!0;var l={};l.name=i[2],l.type=i[1],"Id"!==i[1]||1!==i[0]||"Read"!==e.Raw.type&&"Delete"!==e.Raw.type?"Id"===i[1]&&0===o&&i[0]===t[o].inParam.length&&"Update"===e.Type?l.place="path":l.place="query":l.place="path",t[o].inMultiple&&t[o].inRefKeys&&t[o].inParamRefe[r]&&(l.name=t[o].inRefKeys+","+l.name,l.array=!0),n.push(l)}}var d={};for(o=0;o<n.length;o++)if("query"==n[o].place)if(-1==n[o].name.indexOf(","))d[n[o].name]=this.createSample(n[o].type);else if(n[o].array){var s={};s[(p=n[o].name.split(","))[1]]=this.createSample(n[o].type),d[p[0]]=[s]}else{var p=n[o].name.split(","),c=d;for(r=0;r<p.length-1;r++)c[p[r]]={},c=c[p[r]];c[p[p.length-1]]=this.createSample(n[o].type)}return{meta:n,sample:{obj:d}}},result2json:function(t,e){for(var n=[],a={},o=0;o<t.length;o++)if(t[o].outResult){t[o].outCount&&(l.name="count",l.type="Integer",n.push(l));for(var r=0;r<t[o].outResult.length;r++){var i=t[o].outResult[r];if(!a[i[2]])a[i[2]]=!0,(l={}).name=i[2],l.type=i[1],n.push(l)}}var l,d={},s=null;t.length>1&&t[1].outQuery&&t[1].outMultiple?((d={count:1}).data=[l={}],s=d,d=l):s=d;for(o=0;o<n.length;o++)if(-1==n[o].name.indexOf(","))d[n[o].name]=this.createSample(n[o].type);else{var p=n[o].name.split(","),c=d;for(r=0;r<p.length-1;r++)c[p[r]]=c[p[r]]||{},c=c[p[r]];c[p[p.length-1]]=this.createSample(n[o].type)}return{meta:n,sample:s}},hasResult:function(t,e){for(var n=0;n<t.length;n++)if(t[n].outResult&&t[n].outResult.length>0)return!0;return!1},json2string:function(t){var e=JSON.stringify(t,null,4);return"{}"==e?"N/A":e},createSample:function(t){return"boolean"===(t=t.toLowerCase())||("short"===t?1:"integer"===t?1:"long"===t||"id"===t?1:"float"===t?1:"double"===t?1:"decimal"===t?1:"string"===t?"foo":"text"===t?"foo":"date"===t?"2017-01-01":"datetime"===t?"2017-01-01 01:01:01":"time"===t?"01:01:01":"timestamp"===t?"2017-01-01 01:01:01":void 0)},execRequest:function execRequest(app,actionName,entName,actionType,dbObj,idx,appModel){this.initdb(app,appModel);var param={};if($("#act-try"+idx+"_id").length>0&&(param.id=$("#act-try"+idx+"_id").val()),window["act-try"+idx+"_query_json"]){var json=window["act-try"+idx+"_query_json"].getValue();param=eval("("+json+")")}var conn=dbAdapter.connect(app),input=apibakerclt.prepareInput(param,actionType,entName);apibakerclt.execAction(input,dbObj,function(t){window["act-try"+idx+"_response_json"].setValue(JSON.stringify(t,null,4))},function(t){window["act-try"+idx+"_response_json"].setValue(JSON.stringify(t,null,4))},dbAdapter,conn)},initdb:function(t,e){if(!this.dbinited[t]){var n=e.Runtime.schema,a=dbAdapter.connect(t);dbAdapter.runSql(a,n,function(){console.log("db inited")},function(t){console.log(t)}),this.dbinited[t]=!0}},resetData:function(t){this.dbinited[t]=!1}},template:'\n\t<div v-if="appModel && appModel.Entity" style="padding-left:15px;padding-right:15px">\n\t  \t<h3>{{ appModel.Name }}</h3>\n\t  \t<p>{{ appModel.Description }}</p>\n\t  \t<p class="text-info">{{ appModel.Version }}</p>\n\n\t  \t<h4>API</h4>\n\n\t  \t<div class="panel-group" role="tablist" aria-multiselectable="true" v-for="(entity, entityidx) in appModel.Entity"  :id="\'act-accordion\'+entityidx">\n\t    \t<h5>{{ entity.Name }}</h5>\n\t    \t<div class="panel panel-info" v-for="(action, idx) in appModel.Action" v-if="action.Entity == entity.Name">\n\t\t      \t<div class="panel-heading" role="tab" :id="\'act-heading\'+idx">\n\t\t\t        <h5 class="panel-title">\n                        <span v-if="action.API.method==\'GET\'" class="label label-info pull-left">{{ action.API.method }}</span>\n                        <span v-if="action.API.method==\'POST\'" class="label label-primary pull-left">{{ action.API.method }}</span>\n                        <span v-if="action.API.method==\'PUT\'" class="label label-success pull-left">{{ action.API.method }}</span>\n                        <span v-if="action.API.method==\'DELETE\'" class="label label-warning pull-left">{{ action.API.method }}</span>\n                  \n                        &nbsp;&nbsp;\n                        <a data-toggle="collapse" :data-parent="\'#act-accordion\'+entityidx" :href="\'#act-collapse\'+idx" aria-expanded="false" aria-controls="\'act-collapse\'+idx" class="collapsed">\n\t\t\t             /api/{{ action.API.path }}\n\t\t\t          \t</a>\n\t\t\t          \t<button type="button" class="btn btn-primary btn-xs pull-right" role="button" data-toggle="modal" :data-target="\'#act-try\'+idx" v-on:click="showTry(idx)" >Try it</button>\n\t\t\t        </h5>\n                  </div>\n                  \n\n                  <div class="modal fade" :id="\'act-try\'+idx" tabindex="-1" role="dialog" aria-labelledby="\'act-try\'+idx+\'Label\'">\n                          <div class="modal-dialog" role="document">\n                            <div class="modal-content">\n                              <div class="modal-header">\n                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>\n                                <h4 class="modal-title" id="\'act-try\'+idx+\'Label\'">Try Action {{ action.Name }}</h4>\n                              </div>\n                              <div class="modal-body">  \n                            \x3c!--\n                          <div class="collapse" :id="\'act-try\'+idx">\n                          --\x3e\n\t\t\t            \t<form>\n\t\t\t              \t\t<div class="form-group" v-for="(param, paramidx) in param2json(appModel.Runtime[action.Name], action).meta" v-if="param.place===\'path\'">\n\t\t\t                \t\t<label :for="\'act-try\'+idx+\'_id\'">{{ param.name }}</label>\n\t\t\t                \t\t<input type="text" class="form-control" :id="\'act-try\'+idx+\'_id\'">\n\t\t\t              \t\t</div>\n\t\t\t              \t\t<div class="form-group" v-if="hasQueryParamBody(appModel.Runtime[action.Name], action)">\n\t\t\t                \t\t<label :for="\'act-try\'+idx+\'_query_json\'">Request Body</label>\n\t\t\t                \t\t<div class="form-control try-editor" :id="\'act-try\'+idx+\'_query_json\'" style="height:150px"></div>\n\t\t\t              \t\t</div>\n\t\t\t              \t\t<button type="button" class="btn btn-success btn-block" role="button" v-on:click="execRequest(appModel.Name, action.Name, action.Entity, action.Type, appModel.Runtime[action.Name], idx, appModel)">Execute</button>\n\t\t\t              \t\t<div class="form-group">\n\t\t\t                \t\t<label :for="\'act-try\'+idx+\'_response_json\'">Reponse</label>\n\t\t\t                \t\t<div class="form-control try-editor" :id="\'act-try\'+idx+\'_response_json\'" style="height:150px"></div>\n\t\t\t              \t\t</div>\n                            </form>\n                            \x3c!--\n                          </div>\n                          --\x3e\n                            </div>\n                            <div class="modal-footer">\n                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\n                                <button type="button" class="btn btn-danger pull-left" role="button" v-on:click="resetData(appModel.Name, appModel)">Reset Data</button>\n\t\t\t              \t\t\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        \n\t\t      \t<div :id="\'act-collapse\'+idx" class="panel-collapse collapse" role="tabpanel" :aria-labelledby="\'act-heading\'+idx">\n\t\t\t        <div class="panel-body">\n\t\t\t          \t{{ action.Description }}\n\t\t\t          \t<h5>Action</h5>\n\t\t\t          \t<p>{{ action.Name }}</p>\n\t\t\t          \t<hr/>\n\t\t\t          \t<h5>Request Parameters</h5>\n\t\t\t          \t<div v-if="hasQueryParam(appModel.Runtime[action.Name], action)">\n\t\t\t\t            <table class="table table-hover">\n\t\t\t\t              \t<caption>Paramteres of {{ action.Name }}</caption>\n\t\t\t\t              \t<thead> <tr>  <th>Name</th> <th>Type</th> <th>Place</th> </tr> </thead>\n\t\t\t\t\t              \t<tbody>\n\t\t\t\t\t                <tr v-for="(param, paramidx) in param2json(appModel.Runtime[action.Name], action).meta">\n\t\t\t\t\t                  \t<td> {{ param.name }} </td>\n\t\t\t\t\t                  \t<td> {{ param.type }} </td>\n\t\t\t\t\t                  \t<td> {{ param.place }} </td>\n\t\t\t\t\t                </tr>\n\t\t\t\t              \t</tbody>\n\t\t\t\t            </table>\n\t\t\t            <div v-if="hasQueryParamBody(appModel.Runtime[action.Name], action)">\n\t\t\t            \t<h5>Request Example</h5>\n\t\t\t            \t<pre :id="\'act-try\'+idx+\'_query_json_pre\'">\n{{ json2string(param2json(appModel.Runtime[action.Name], action).sample) }}</pre>\n\t\t\t            \t</div>\n\t\t\t          \t</div>\n\t\t\t          \t<div v-else>\n\t\t\t            \t<span>None</span>\n\t\t\t          \t</div>\n\t\t\t          \t<hr/>\n\t\t\t          \t<h5>Response</h5>\n\t\t\t          \t<div v-if="hasResult(appModel.Runtime[action.Name], action)">\n\t\t\t            <table class="table table-hover">\n\t\t\t              \t<caption>Response of {{ action.Name }}</caption>\n\t\t\t              \t<thead> <tr>  <th>Name</th> <th>Type</th> </tr> </thead>\n\t\t\t              \t<tbody>\n\t\t\t                \t<tr v-for="(result, resultidx) in result2json(appModel.Runtime[action.Name], action).meta">\n\t\t\t                  \t\t<td> {{ result.name }} </td>\n\t\t\t                  \t\t<td> {{ result.type }} </td>\n\t\t\t                \t</tr>\n\t\t\t              \t</tbody>\n\t\t\t            </table>\n\t\t\t            <h5>Example</h5>\n\t\t\t            <pre >\n{{ json2string(result2json(appModel.Runtime[action.Name], action).sample) }}</pre>\n\t\t\t          \t</div>\n\t\t\t          \t<div v-else>\n\t\t\t            \t<span>None</sapn>\n\t\t\t          \t</div>\n                          <hr/>\n                          \x3c!--\n                          <button type="button" class="btn btn-primary btn-block" role="button" data-toggle="collapse" :href="\'#act-try\'+idx" aria-expanded="false" :aria-controls="\'act-try\'+idx" v-on:click="showTry(idx)">Try it</button>\n                          --\x3e\n                          <button type="button" class="btn btn-primary btn-block" role="button" data-toggle="modal" :data-target="\'#act-try\'+idx" v-on:click="showTry(idx)" >Try it</button>\n                          \n\t\t\t        </div>\n\n\t\t      \t</div>\n            </div>\n            \n\n            \n\t    \t<hr/>\n\t\t</div>\n\n\n\t  \t<h4>Entity</h4>\n\t  \t<div class="panel-group" id="ent-accordion" role="tablist" aria-multiselectable="true">\n\t\t    <div class="panel panel-info" v-for="(entity, idx) in appModel.Entity">\n\t\t      \t<div class="panel-heading" role="tab" :id="\'ent-heading\'+idx">\n\t\t\t        <h4 class="panel-title">\n\t\t\t          \t<a role="button" data-toggle="collapse" data-parent="#ent-accordion" :href="\'#ent-collapse\'+idx" aria-expanded="false" aria-controls="\'ent-collapse\'+idx" class="collapsed">\n\t\t\t            {{ entity.Name }}\n\t\t\t          \t</a>\n\t\t\t        </h4>\n\t\t      \t</div>\n\t\t      \t<div :id="\'ent-collapse\'+idx" class="panel-collapse collapse" role="tabpanel" :aria-labelledby="\'ent-heading\'+idx">\n\t\t        \t<div class="panel-body">\n\t\t          \t\t{{ entity.Description }}\n\t\t\t          \t<h4>Property</h4>\n\t\t\t\t        <table class="table table-hover">\n\t\t\t\t            <caption>Properties of {{ entity.Name }}</caption>\n\t\t\t\t            <thead> <tr>  <th>Name</th> <th>Type</th> </tr> </thead>\n\t\t\t\t            <tbody>\n\t\t\t\t            \t<tr v-for="(prop, propidx) in entity.Property">\n\t\t\t\t                \t<td> {{ prop.Name }} </td>\n\t\t\t\t                \t<td> {{ prop.Type }} </td>\n\t\t\t\t            \t</tr>\n\t\t\t\t            </tbody>\n\t\t\t\t        </table>\n\t\t\t\t\t\t<template v-if="entity.Reference.length>0">\n\t\t\t          \t<h4>Reference</h4>\n\t\t\t          \t<table class="table table-hover">\n\t\t\t            \t<caption>References of {{ entity.Name }}</caption>\n\t\t\t            \t<thead> <tr>  <th>Name</th> <th>Type</th> <th>Entity</th> <th>Inverse Name</th> </tr> </thead>\n\t\t\t            \t<tbody>\n\t\t\t              \t<tr v-for="(prop, propidx) in entity.Reference">\n\t\t\t\t                <td> {{ prop.Name }} </td>\n\t\t\t\t                <td> {{ prop.RefeType }} </td>\n\t\t\t\t                <td> {{ prop.Entity }} </td>\n\t\t\t\t                <td> {{ prop.InvName }} </td>\n\t\t\t              \t</tr>\n\t\t\t            \t</tbody>\n\t\t\t\t\t\t  </table>\n\t\t\t\t\t\t</template>\n\n\t\t        \t</div>\n\t\t      \t</div>\n\t\t    </div>\n\t\t</div>\n\n  \t</div>\n\t'}),Vue.component("api-test",{store:store,computed:_extends({},Vuex.mapState(["code"]),{appModel:function appModel(){var model=eval("("+this.code+")");if(!model)return{};try{var appModel=genAppJSON(model,"sqlite",!0);return appModel.raw=model,appModel}catch(t){return console.log(t),{}}}}),data:function(){return{result:{tests:[],all:{}},processing:!1}},updated:function(){},methods:{loadtest:function(){this.processing=!0,this.result.tests=[];var t=this,e=this.appModel,n=e.Runtime.schema,a=dbAdapter.connect(e.raw.name);dbAdapter.runSql(a,n,function(){debuglog(dbAdapter.name+" "+e.raw.name+" db setup"),apibakerclt.runTest(e.raw.test,e,a,dbAdapter,function(e){setTimeout(function(){t.processing=!1,debuglog(JSON.stringify(e,null,4)),t.result=e},1e3)})},function(t){errlog(t)})}},template:'\n\n\n    <div  style="padding:15px">\n        <template v-if="appModel.raw.test && appModel.raw.test.length>0">\n        <div class="row" style="margin-top:10px;margin-bottom:10px;padding:10px">\n\n            <button type="button" class="btn btn-primary btn-block btn-sm" role="button" v-on:click="loadtest()">Run Test</button>\n            \n        </div>\n\n        <ul class="list-group">\n        <li v-for="(item, idx) in result.tests" :class="\'list-group-item \'+(item.succ?\'list-group-item-success\':\'list-group-item-danger\')"  >\n            <span class="badge">{{item.succ?\'Passed\':\'Failed\'}}</span>\n            {{idx+1}}  \n                <a data-toggle="collapse" data-parent="#result-accordion" :href="\'#result\'+idx" aria-expanded="false" :aria-controls="\'resultHeading\'+idx">\n                    {{item.action}} \n                </a>\n\n                <div :id="\'result\'+idx" class="panel-collapse collapse" role="tabpanel" :aria-labelledby="\'resulthHeading\'+idx">\n                <div class="panel-body">\n<pre>{{JSON.stringify(item, null, 4)}}</pre>\n                </div>\n            </div>\n\n        </li>\n        </ul>\n\n        <div class="alert alert-info" role="alert" v-if="processing">Processing</div>\n\n        </template>\n        <div class="alert alert-info" role="alert" v-if="!appModel.raw.test || appModel.raw.test.length==0">No Test</div>\n\n    </div>\n\n\t'});var vue=new Vue({store:store,methods:{},computed:_extends({},Vuex.mapState(["code"]),{appModel:function appModel(){var model=eval("("+this.code+")");if(!model)return{};try{var appModel=genAppJSON(model,"sqlite",!0);return appModel.raw=model,appModel}catch(t){return console.log(t),{}}},error:function error(){try{var model=eval("("+this.code+")");if(model.domain&&0!=model.domain.length){var _iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=model.domain[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var domain=_step.value;if(domain.entity&&domain.entity.length>0)return null}}catch(t){_didIteratorError=!0,_iteratorError=t}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}return"No entity defined"}return"No domain defined"}catch(t){return"Invaild JSON"}return null}}),mounted:function mounted(){var samplemodel=eval("("+sample_code+")");initJSONEditor(JSON.stringify(samplemodel,null,4))}}).$mount("#app");function initJSONEditor(code1){if($("#codeeditor").length>0&&(window.editor=ace.edit("codeeditor"),editor.setTheme("ace/theme/twilight"),editor.session.setMode("ace/mode/json"),editor.$blockScrolling=1/0,editor.getSession().on("change",function(){try{null!=window.updateTimer&&clearTimeout(updateTimer),window.updateTimer=window.setTimeout(function(){var code=window.editor.getValue()||code1;try{var model=eval("("+code+")")}catch(t){}store.commit("setCode",code),window.updateTimer=null},1e3)}catch(t){console.error(t)}})),window.editor)try{window.editor.setValue(code1,-1)}catch(t){console.log("Code Syntax Error: "+t)}}},{}]},{},[1]);